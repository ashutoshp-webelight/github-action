services:
  app:
    image: "${DOCKER_COMPOSE_IMAGE_NAME}"
    container_name: "${NAME}"
    depends_on:
      postgresql:
        condition: service_healthy
    ports:
      - "${DOCKER_PORT}:80"
    networks:
      - default
#    logging:
#      driver: "awslogs"
#      options:
#        awslogs-region: "us-east-1"
#        awslogs-group: "${AWS_LOG_GROUP}"
#        awslogs-create-group: "true"
#        tag: "{{.Name}}"

  strapi:
    container_name: '${NAME}-strapi'
    image: naskio/strapi
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: "${DATABASE_CLIENT}"
      DATABASE_HOST: postgresql
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME: "${DATABASE_NAME}"
      DATABASE_USERNAME: "${DATABASE_USER}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET_KEY}"
      ADMIN_JWT_SECRET: "${ADMIN_JWT_SECRET}"
      APP_KEYS: "${APP_KEYS}"
      NODE_ENV: development
    volumes:
      - tappstr-strapi-config:/opt/app/config
      - tappstr-strapi-src:/opt/app/src
      - tappstr-strapi-package-json:/opt/package.json
      - tappstr-strapi-yarn-lock:/opt/yarn.lock
      - tappstr-strapi-env:/opt/app/.env
      - tappstr-strapi-public-uploads:/opt/app/public/uploads

    ports:
      - "127.0.0.0:1337:1337"
    networks:
      - default
    depends_on:
      - postgresql

  postgresql:
    image: "postgres:alpine"
    container_name: "${NAME}-postgresql"
    environment:
      - "POSTGRES_USER=${DATABASE_USER}"
      - "POSTGRES_PASSWORD=${DATABASE_PASSWORD}"
      - "POSTGRES_DB=${DATABASE_NAME}"
    volumes:
      - postgresql:/data/postgres
    networks:
      - default
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME} -h localhost -p 5432" ]
      start_period: 5s
      interval: 10s
      timeout: 5s

  redis:
   container_name: tappstr-redis
   image: redis:latest
   environment:
     REDIS_PASSWORD: ${REDIS_PASSWORD:-admin}
   env_file:
     - .env
   volumes:
     - redis:/data
   ports:
     - 6379:6379
   networks:
     - backend

  volumes:
    postgresql:
     name: "tappstr-postgresql"
   pgadmin:
     name: pgadmin
   redis:
     name: tappstr-redis

networks:
  default:
    name: "${NAME}-backend"
    driver: bridge

volumes:
  postgresql:
    name: "${NAME}-postgresql"
  tappstr-strapi-config:
    name: "tappstr-strapi-config"
  tappstr-strapi-src:
    name: "tappstr-strapi-src"
  tappstr-strapi-package-json:
    name: "tappstr-strapi-package-json"
  tappstr-strapi-yarn-lock:
    name: 'tappstr-strapi-yarn-lock'
  tappstr-strapi-env:
    name: "tappstr-strapi-env"
  tappstr-strapi-public-uploads:
    name: "tappstr-strapi-public-uploads"
  tappstr-redis:
    name: "tappstr-redis"
